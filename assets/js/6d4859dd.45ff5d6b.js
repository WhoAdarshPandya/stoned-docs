(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return d})),n.d(t,"default",(function(){return p}));var r=n(3),o=n(7),l=(n(0),n(97)),i=n(99),a=(n(56),{sidebar_position:7}),s={unversionedId:"components/TextField",id:"components/TextField",isDocsHomePage:!1,title:"TextField",description:"TextField Variants",source:"@site/docs/components/TextField.mdx",sourceDirName:"components",slug:"/components/TextField",permalink:"/stoned-docs/docs/components/TextField",editUrl:"https://github.com/whoadarshpandya/stoned-docs/tree/main/docs/components/TextField.mdx",version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Alert",permalink:"/stoned-docs/docs/components/Alert"},next:{title:"Image",permalink:"/stoned-docs/docs/components/Image"}},d=[{value:"TextField Variants",id:"textfield-variants",children:[{value:"TextField Standard",id:"textfield-standard",children:[]},{value:"TextField Filled",id:"textfield-filled",children:[]},{value:"TextField Outlined",id:"textfield-outlined",children:[]}]},{value:"Handeling Errors With stoned",id:"handeling-errors-with-stoned",children:[]}],c={toc:d};function p(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(l.b)("wrapper",Object(r.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("br",null),Object(l.b)("h2",{id:"textfield-variants"},"TextField Variants"),Object(l.b)("h3",{id:"textfield-standard"},"TextField Standard"),Object(l.b)(i.g,{onChange:function(e){return console.log(e)},onClick:function(e){return console.log(e)},type:"text",label:"Standard",mdxType:"TextField"}),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/App.js"',title:'"src/App.js"'},'import { useState } from "react";\nimport { TextField } from "stoned";\nimport "stoned/dist/index.css";\n\nconst App = () => {\n  const [name, setName] = useState("");\n  return (\n    <React.Fragment>\n      <TextField\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n        onClick={(e) => console.log(e)}\n        type="text"\n        label="Standard"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n')),Object(l.b)("h3",{id:"textfield-filled"},"TextField Filled"),Object(l.b)(i.g,{onChange:function(e){return console.log(e)},onClick:function(e){return console.log(e)},type:"text",variant:"filled",label:"Filled",mdxType:"TextField"}),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/App.js"',title:'"src/App.js"'},'import { useState } from "react";\nimport { TextField } from "stoned";\nimport "stoned/dist/index.css";\n\nconst App = () => {\n  const [surname, setSurname] = useState("");\n  return (\n    <React.Fragment>\n      <TextField\n        value={surname}\n        onChange={(e) => setSurname(e.target.value)}\n        onClick={(e) => console.log(e)}\n        type="text"\n        variant="filled"\n        label="Filled"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n')),Object(l.b)("h3",{id:"textfield-outlined"},"TextField Outlined"),Object(l.b)(i.g,{onChange:function(e){return console.log(e)},onClick:function(e){return console.log(e)},type:"text",variant:"outlined",label:"Outlined",mdxType:"TextField"}),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/App.js"',title:'"src/App.js"'},'import { useState } from "react";\nimport { TextField } from "stoned";\nimport "stoned/dist/index.css";\n\nconst App = () => {\n  const [branch, setBranch] = useState("");\n  return (\n    <React.Fragment>\n      <TextField\n        value={branch}\n        onChange={(e) => setBranch(e.target.value)}\n        onClick={(e) => console.log(e)}\n        type="text"\n        variant="outlined"\n        label="Outlined"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n')),Object(l.b)("h2",{id:"handeling-errors-with-stoned"},"Handeling Errors With stoned"),Object(l.b)(i.g,{value:"this",onChange:function(e){return console.log(e)},onClick:function(e){return console.log(e)},type:"text",label:"Error Standard",helperText:"this is helper",error:!0,mdxType:"TextField"}),Object(l.b)(i.g,{value:"is",variant:"filled",onChange:function(e){return console.log(e)},onClick:function(e){return console.log(e)},type:"text",label:"Error Filled",helperText:"this is helper 2",error:!0,mdxType:"TextField"}),Object(l.b)(i.g,{value:"error",variant:"outlined",onChange:function(e){return console.log(e)},onClick:function(e){return console.log(e)},type:"text",label:"Error Outlined",helperText:"this is helper 3",error:!0,mdxType:"TextField"}),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx",metastring:'title="src/App.js"',title:'"src/App.js"'},'import { useState } from "react";\nimport { TextField } from "stoned";\nimport "stoned/dist/index.css";\n\nconst App = () => {\n  const [txt4, setTxt4] = useState("this");\n  const [txt5, setTxt5] = useState("is");\n  const [txt6, setTxt6] = useState("error");\n  return (\n    <React.Fragment>\n      <TextField\n        value={txt4}\n        onChange={(e) => setTxt4(e.target.value)}\n        onClick={(e) => console.log(e)}\n        type="text"\n        label="Error Standard"\n        helperText="this is helper"\n        error={true}\n      />\n      <TextField\n        value={txt5}\n        variant="filled"\n        onChange={(e) => setTxt5(e.target.value)}\n        onClick={(e) => console.log(e)}\n        type="text"\n        label="Error Filled"\n        helperText="this is helper 2"\n        error={true}\n      />\n      <TextField\n        value={txt6}\n        variant="outlined"\n        onChange={(e) => setTxt6(e.target.value)}\n        onClick={(e) => console.log(e)}\n        type="text"\n        label="Error Outlined"\n        helperText="this is helper 3"\n        error={true}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default App;\n')))}p.isMDXComponent=!0}}]);